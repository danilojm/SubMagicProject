exports.id=892,exports.ids=[892],exports.modules={7462:(e,t,a)=>{"use strict";a.d(t,{z:()=>s});var r=a(96330);let s=globalThis.prisma??new r.PrismaClient},41098:(e,t,a)=>{"use strict";a.d(t,{N:()=>n});var r=a(13581),s=a(16467),i=a(7462),o=a(85663);let n={adapter:(0,s.y)(i.z),providers:[(0,r.A)({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)return null;let t=await i.z.user.findUnique({where:{email:e.email}});return t&&t.password&&await o.Ay.compare(e.password,t.password)?{id:t.id,email:t.email,name:t.name,role:t.role,plan:t.plan}:null}})],session:{strategy:"jwt"},callbacks:{jwt:async({token:e,user:t})=>(t&&(e.role=t.role,e.plan=t.plan),e),session:async({session:e,token:t})=>(t&&(e.user.id=t.sub,e.user.role=t.role,e.user.plan=t.plan),e)},pages:{signIn:"/auth/signin"}}},57729:()=>{},78335:()=>{},91737:(e,t,a)=>{"use strict";a.d(t,{y:()=>E});var r=a(7462),s=a(33873),i=a.n(s);class o{async updateJobStatus(e,t,a,s){let i={status:t,progress:a,updatedAt:new Date};s?.statusMessage&&(i.statusMessage=s.statusMessage),s?.errorMessage?i.errorMessage=s.errorMessage:"FAILED"!==t&&(i.errorMessage=null),"PROCESSING"===t&&0===a&&(i.processingStarted=new Date),await r.z.job.update({where:{id:e},data:i})}async updateJobEndTime(e){await r.z.job.update({where:{id:e},data:{processingEnded:new Date}})}async updateTranscriptionText(e,t){await r.z.job.update({where:{id:e},data:{transcriptionText:t}})}}var n=a(79748),l=a.n(n);class c{async createDirectory(e){await l().mkdir(e,{recursive:!0})}async writeFile(e,t,a="utf-8"){await l().writeFile(e,t,a)}async getFileStats(e){return{size:(await l().stat(e)).size}}}var u=a(79646);class d{async downloadAudio(e,t,a,r){await r({status:"DOWNLOADING",progress:10,options:{statusMessage:"Downloading audio..."}}),console.log(`Downloading audio from JobID ${a} at videoUrl ${e} to outputDir ${t}`);let s=i().join(t,"audio.wav");return new Promise((t,r)=>{let i=`yt-dlp -x --audio-format wav -o "${s}" "${e}"`;console.log(`Executing command: ${i}`),(0,u.exec)(i,e=>{if(e)return console.error(`Download error for job ${a}:`,e),r(Error(`Download failed: ${e.message}`));t(s)})})}validateVideoUrl(e){try{return new URL(e),!0}catch{return!1}}sanitizeOutputPath(e){return i().resolve(e)}}class p{async transcribeAudio(e,t,a,r,s){await s({status:"TRANSCRIBING",progress:40,options:{statusMessage:"Transcribing audio..."}}),this.validateWhisperModel(r);let o=i().join(t,"audio.srt");return new Promise((a,s)=>{let i=`whisper "${e}" --model "${r}" --language "en" --output_format srt --output_dir "${t}"`;console.log(`Executing transcription command: ${i}`),(0,u.exec)(i,async e=>{if(e)return s(Error(`Transcription failed: ${e.message}`));try{let e=await l().readFile(o,"utf-8");return a(e)}catch(e){s(Error(`Reading SRT failed: ${e.message}`))}})})}validateWhisperModel(e){if(!this.supportedModels.includes(e))throw Error(`Unsupported Whisper model: ${e}. Supported models: ${this.supportedModels.join(", ")}`)}getSupportedModels(){return[...this.supportedModels]}constructor(){this.supportedModels=["tiny","base","small","medium","large"]}}class h{constructor(e){this.fileService=e}async saveSubtitle(e,t,a,s,i){try{let o=await this.fileService.getFileStats(i);await r.z.subtitle.create({data:{jobId:e,language:t,format:a,content:s,filePath:i,fileSize:o.size,downloadCount:0,isEdited:!1}}),console.log(`Subtitle saved for job ${e}, language: ${t}`)}catch(t){throw console.error(`Failed to save subtitle for job ${e}:`,t),t}}async clearSubtitles(e){await r.z.subtitle.deleteMany({where:{jobId:e}})}async getSubtitlesByJob(e){return r.z.subtitle.findMany({where:{jobId:e}})}async incrementDownloadCount(e){await r.z.subtitle.update({where:{id:e},data:{downloadCount:{increment:1}}})}}class g{normalizeLanguageCode(e){return e.toLowerCase()}handleTranslationError(e,t){return console.warn(`Translation failed for text: "${t.substring(0,50)}..."`,e),t}}class w extends g{async translate(e,t){try{let{translate:r}=await a.e(837).then(a.t.bind(a,83837,23)),s=this.normalizeLanguageCode(t);return(await r(e,{to:s})).text}catch(t){return this.handleTranslationError(t,e)}}async translateBatch(e,t){try{let r=(await a.e(837).then(a.t.bind(a,83837,23))).default,s=this.normalizeLanguageCode(t),i=e.map(e=>r(e,{to:s}));return(await Promise.all(i)).map(e=>e.text)}catch(t){return console.error("Google batch translation failed:",t),e}}normalizeLanguageCode(e){let t=e.split("-");return t.length>1?t[0]+"-"+t[1].toUpperCase():e}getSupportedLanguages(){return["en","es","fr","de","it","pt","ru","ja","ko","zh"]}getMaxBatchSize(){return 100}}var b=a(94612);class S extends g{constructor(){if(super(),this.apiKey=process.env.DEEPL_API_KEY,this.baseUrl="https://api-free.deepl.com/v2/translate",!this.apiKey)throw Error("DEEPL_API_KEY is required for DeepL translation")}async translate(e,t){try{let a=new URLSearchParams;return a.append("auth_key",this.apiKey),a.append("text",e),a.append("target_lang",t.toUpperCase()),(await b.A.post(this.baseUrl,a)).data.translations[0].text}catch(t){return this.handleTranslationError(t,e)}}async translateBatch(e,t){try{let a={Authorization:`DeepL-Auth-Key ${this.apiKey}`,"Content-Type":"application/json"},r={text:e,target_lang:t.toUpperCase()};return(await b.A.post(this.baseUrl,r,{headers:a})).data.translations.map(e=>e.text)}catch(t){return console.error("DeepL batch translation failed:",t),e}}getSupportedLanguages(){return["EN","ES","FR","DE","IT","PT","RU","JA","ZH"]}getMaxBatchSize(){return 50}}class v extends g{constructor(){if(super(),this.apiKey=process.env.AZURE_TRANSLATOR_KEY,this.region=process.env.AZURE_TRANSLATOR_REGION,this.endpoint="https://api.cognitive.microsofttranslator.com/translate?api-version=3.0",!this.apiKey||!this.region)throw Error("AZURE_TRANSLATOR_KEY and AZURE_TRANSLATOR_REGION are required")}async translate(e,t){try{let a=`${this.endpoint}&to=${t}`;return(await b.A.post(a,[{Text:e}],{headers:{"Ocp-Apim-Subscription-Key":this.apiKey,"Ocp-Apim-Subscription-Region":this.region,"Content-Type":"application/json"}})).data[0].translations[0].text}catch(t){return this.handleTranslationError(t,e)}}async translateBatch(e,t){try{let a=`${this.endpoint}&to=${t}`,r=e.map(e=>({Text:e}));return(await b.A.post(a,r,{headers:{"Ocp-Apim-Subscription-Key":this.apiKey,"Ocp-Apim-Subscription-Region":this.region,"Content-Type":"application/json"}})).data.map(e=>e.translations[0].text)}catch(t){return console.error("Azure batch translation failed:",t),e}}getSupportedLanguages(){return["en","es","fr","de","it","pt","ru","ja","ko","zh"]}getMaxBatchSize(){return 100}}class y{constructor(){this.providers=new Map,this.initializeProviders()}initializeProviders(){try{this.providers.set("google",new w)}catch(e){console.warn("Google Translation Provider not available:",e)}try{this.providers.set("deepl",new S)}catch(e){console.warn("DeepL Translation Provider not available:",e)}try{this.providers.set("azure",new v)}catch(e){console.warn("Azure Translation Provider not available:",e)}if(0===this.providers.size)throw Error("No translation providers are available. Check your environment variables.")}getProvider(e){let t=this.providers.get(e);if(!t)throw Error(`Translation provider '${e}' is not available`);return t}async translate(e,t,a="google"){return this.getProvider(a).translate(e,t)}async translateBatch(e,t,a="google"){let r=this.getProvider(a),s=r.getMaxBatchSize();if(e.length<=s)return r.translateBatch(e,t);let i=[];for(let a=0;a<e.length;a+=s){let o=e.slice(a,a+s),n=await r.translateBatch(o,t);i.push(...n)}return i}getAvailableProviders(){return Array.from(this.providers.keys())}isProviderAvailable(e){return this.providers.has(e)}}new y;class m{constructor(e){this.translationService=e}async translateSrt(e,t,a="google"){let r=e.trim().split(/\n\s*\n/),{parsed:s,passthrough:i}=this.parseBlocks(r),o=Array(r.length);if(0===s.length)return r;let n=s.map(e=>e.text);try{let e=await this.translationService.translateBatch(n,t,a);return s.forEach((t,a)=>{o[t.rawPos]=`${t.idx}
${t.time}
${e[a]}`}),i.forEach(e=>{o[e.rawPos]=e.block}),o}catch(e){return console.error("SRT translation failed:",e),r}}parseBlocks(e){let t=[],a=[];return e.forEach((e,r)=>{let s=e.split("\n");if(s.length>=3){let[e,a,...i]=s;t.push({idx:e,time:a,text:i.join(" "),rawPos:r})}else a.push({rawPos:r,block:e})}),{parsed:t,passthrough:a}}validateSrtFormat(e){return e.trim().split(/\n\s*\n/).some(e=>{let t=e.split("\n");return t.length>=3&&/^\d+$/.test(t[0])&&/\d{2}:\d{2}:\d{2},\d{3}\s*-->\s*\d{2}:\d{2}:\d{2},\d{3}/.test(t[1])})}}class f{constructor(){this.processingJobs=new Map,this.jobStatusService=new o,this.fileService=new c,this.audioDownloadService=new d,this.transcriptionService=new p,this.subtitleService=new h(this.fileService),this.translationService=new y,this.srtTranslationService=new m(this.translationService)}static getInstance(){return f.instance||(f.instance=new f),f.instance}async processJob(e){try{console.log(`Processing job ${e}`);let t=await this.getJobDetails(e);if(!t)throw Error("Job not found");console.log(`Job details: ${JSON.stringify(t)}`),await this.jobStatusService.updateJobStatus(e,"PROCESSING",0,{statusMessage:"Starting processing..."});let{tempDir:a,downloadsDir:r}=await this.setupDirectories(e);if(!t.inputSource)throw Error("Invalid job input source or settings");let s=await this.audioDownloadService.downloadAudio(t.inputSource,a,e,t=>this.jobStatusService.updateJobStatus(e,t.status,t.progress,t.options)),i=await this.transcriptionService.transcribeAudio(s,a,e,t.jobSettings?.whisperModel||"base",t=>this.jobStatusService.updateJobStatus(e,t.status,t.progress,t.options));await this.jobStatusService.updateTranscriptionText(e,i),await this.jobStatusService.updateJobStatus(e,"TRANSLATING",70,{statusMessage:`Translating to ${t.targetLanguages.length} language(s)...`}),await this.processTranslations(t,i,r,e),await this.jobStatusService.updateJobStatus(e,"COMPLETED",100,{statusMessage:"Job completed successfully."}),await this.jobStatusService.updateJobEndTime(e)}catch(t){console.error("Job processing error:",t),await this.jobStatusService.updateJobStatus(e,"FAILED",0,{errorMessage:t instanceof Error?t.message:"Unknown error",statusMessage:"Job failed during processing."})}}async getJobDetails(e){return r.z.job.findUnique({where:{id:e},include:{jobSettings:!0}})}async setupDirectories(e){let t=i().join(__dirname,"../temp",e),a=i().join(__dirname,"../downloads",e);return await this.fileService.createDirectory(t),await this.fileService.createDirectory(a),{tempDir:t,downloadsDir:a}}async processTranslations(e,t,a,r){let s=e.jobSettings?.translationProvider||"google";if(!this.translationService.isProviderAvailable(s))throw Error(`Translation provider '${s}' is not available`);for(let o=0;o<e.targetLanguages.length;o++){let n=e.targetLanguages[o],l=t,c=`subtitles_${r}_${n}.srt`;"en"!==n&&(l=(await this.srtTranslationService.translateSrt(t,n,s)).join("\n\n"));let u=i().join(a,c);await this.fileService.writeFile(u,l),await this.subtitleService.saveSubtitle(r,n,"SRT",l,u);let d=70+(o+1)/e.targetLanguages.length*25;await this.jobStatusService.updateJobStatus(r,"TRANSLATING",d,{statusMessage:`Processed ${o+1}/${e.targetLanguages.length} languages`})}}async cancelJob(e){let t=this.processingJobs.get(e);t&&(clearTimeout(t),this.processingJobs.delete(e)),await this.jobStatusService.updateJobStatus(e,"CANCELLED",0,{statusMessage:"Job cancelled by user."})}async retryJob(e){await this.subtitleService.clearSubtitles(e),await r.z.job.update({where:{id:e},data:{status:"QUEUED",progress:0,errorMessage:null,statusMessage:"Queued for retry.",processingStarted:null,processingEnded:null,transcriptionText:null}}),setTimeout(()=>this.processJob(e),1e3)}getAvailableTranslationProviders(){return this.translationService.getAvailableProviders()}getSupportedWhisperModels(){return this.transcriptionService.getSupportedModels()}async getJobSubtitles(e){return this.subtitleService.getSubtitlesByJob(e)}}let E=f.getInstance()},96487:()=>{}};